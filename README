Componenti del gruppo:

    Nome         -           Cognome             -        Numero di matricola
 Federica        -           Belotti             -           193872
 Claudio         -           Facchinetti         -           193588
 Federica        -           Ress                -           195172

Breve descrizione del progetto:
Emulazione di un sistema di domotica. I dispositivi creano 3 processi che comunicano tra di loro su tre pipe differenti. 

[inserire qua gestione di blocking @Claudio ]
[Inserire qua la gestione delle pipe]

Questo sistema di gestione è comune per tutti le tipologie di dispositivi emulate da questo progetto.

Differenze tra dispositivi di controllo e di interazione
La differenza tra dispositivi di controllo e dispositivi di interazione è principalmente nella gestione di messaggi in entrata non propri. 
Quando un dispositivo di controllo riceve un messaggio non proprio chiede ai propri figli se può mandare il messaggio per arrivare al dispositivo interessato. Quando un dispositivo di interazione riceve un messaggio non proprio //???

// ? altro?

Note sui componenti

Dispositivi di controllo
Centralina:
comunica ai figli [...]

Hub:
[...]

Timer:
[...]

Dispositivi di interazione
Finestra:
[...]
---------------------------------------v0:---------------------------
Ha un registro che indica il tempo di utilizzo. Controlla l'input e sovrascrive i valori in input, se disponibili. Chiama una funzione a supporto che contiene la logica del programma. Questa funzione crea i processi a supporto e resta perennemente in ascolto sulla propria pipe. ...
...
...
//(manca ancora altre cose, quindi viene decisamente troppo lungo, secondo me)

//Okay, dato che viene troppo lungo proviamo una descrizione più corta

---------------------------------------v1:-------------------------------
La finestra gestisce i propri messaggi rispondendo con:
- un messaggio "FALSE" sulla pipe_interna se l'id non corrisponde
- //altri casi ??

- un messaggio "TRUE" sulla pipe_interna se l'id corrisponde. In questo caso, in base al messaggio ricevuto reagisce compiendo le  l'azione indicata dal messaggio. 
Le azioni eseguibili sono indicate nel makefile.



Frigo:
[...]

Implementazione di umano:
[...]

L'umano esegue sempre la stessa funzione la quale:
- chiede in input l'id dispositivo e il tipo di messaggio da mandare
- invia un hmessaggio all'id interessato
- interpreta i messaggi che arrivano 

//??? è così? Manca qualcosa? Forse manca qualcosa nel codice, per gestire l'override?


Note sul makefile:


Varie ed eventuali:
[...]
Override: l'override è implementato [...]


/*
* nota:  [...] significa inserire commenti/note relative
*
*/

DA AGGIUNGERE:
- tipi di messaggi
- overrride
- gestione delle pipe
- altre cose in comune tra i dispositivi
- differenze tra dispositivi